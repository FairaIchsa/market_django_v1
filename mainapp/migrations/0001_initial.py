# Generated by Django 3.2.7 on 2021-11-23 16:23

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название категории')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='MenuCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название категории')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name_plural': 'Menu categories',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=9, verbose_name='Цена')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Товаров на складе')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярен')),
                ('status', models.CharField(choices=[('discontinued', 'нет в наличии'), ('popular', 'популярный'), ('best_seller', 'хит продаж')], max_length=255, verbose_name='Статус')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Основное изображение')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='mainapp.category', verbose_name='Категория')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('sale_modifier', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='SliderInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('main', models.CharField(max_length=255)),
                ('base', models.CharField(max_length=255)),
                ('text_1_main', models.CharField(blank=True, max_length=255, null=True)),
                ('text_1_base', models.CharField(blank=True, max_length=255, null=True)),
                ('text_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст 2')),
                ('text_3_main', models.CharField(blank=True, max_length=255, null=True)),
                ('text_3_base', models.CharField(blank=True, max_length=255, null=True)),
                ('text_4', models.CharField(blank=True, max_length=255, null=True, verbose_name='Текст 4')),
            ],
            options={
                'verbose_name_plural': 'Slider info',
            },
        ),
        migrations.CreateModel(
            name='TennisTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foldable', models.BooleanField(default=False, verbose_name='Складной')),
                ('folded_size', models.CharField(blank=True, max_length=255, null=True, verbose_name='Размер в сложенном состоянии')),
                ('unfolded_size', models.CharField(max_length=255, verbose_name='Размер в разложенном состоянии')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='child_product_tennis_table', to='mainapp.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='SubImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Дополнительное изображение')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mainapp.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название подкатегории')),
                ('slug', models.SlugField(unique=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='mainapp.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name_plural': 'Subcategories',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.sale', verbose_name='Скидка'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.subcategory', verbose_name='Подкатегория'),
        ),
        migrations.CreateModel(
            name='Description',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='Позиция')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='description', to='mainapp.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='Ball',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.PositiveIntegerField(verbose_name='Размер')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='child_product_ball', to='mainapp.product', verbose_name='Товар')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('father_name', models.CharField(blank=True, max_length=150, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, unique=True)),
                ('ship_address', models.CharField(blank=True, max_length=255)),
                ('anonymous', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
